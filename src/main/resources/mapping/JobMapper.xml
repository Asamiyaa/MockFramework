<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.timing.quartz.dao.JobMapper">
  <resultMap id="BaseResultMap" type="com.timing.quartz.entity.Job">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="bean_name" jdbcType="VARCHAR" property="beanName" />
    <result column="method_name" jdbcType="VARCHAR" property="methodName" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression" />
    <result column="job_group" jdbcType="VARCHAR" property="jobGroup" />
    <result column="trigger_name" jdbcType="VARCHAR" property="triggerName" />
    <result column="trigger_group" jdbcType="VARCHAR" property="triggerGroup" />
    <result column="pre_job" jdbcType="INTEGER" property="preJob" />
    <result column="is_effect" jdbcType="CHAR" property="isEffect" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="remartk" jdbcType="VARCHAR" property="remartk" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="ext" jdbcType="VARCHAR" property="ext" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.timing.quartz.entity.Job">
    insert into job (id, job_name, bean_name, 
      method_name, params, cron_expression, 
      job_group, trigger_name, trigger_group, 
      pre_job, is_effect, state, 
      remartk, create_time, update_time, 
      ext)
    values (#{id,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, #{beanName,jdbcType=VARCHAR}, 
      #{methodName,jdbcType=VARCHAR}, #{params,jdbcType=VARCHAR}, #{cronExpression,jdbcType=VARCHAR}, 
      #{jobGroup,jdbcType=VARCHAR}, #{triggerName,jdbcType=VARCHAR}, #{triggerGroup,jdbcType=VARCHAR}, 
      #{preJob,jdbcType=INTEGER}, #{isEffect,jdbcType=CHAR}, #{state,jdbcType=CHAR}, 
      #{remartk,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{ext,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.timing.quartz.entity.Job">
    update job
    set job_name = #{jobName,jdbcType=VARCHAR},
      bean_name = #{beanName,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      cron_expression = #{cronExpression,jdbcType=VARCHAR},
      job_group = #{jobGroup,jdbcType=VARCHAR},
      trigger_name = #{triggerName,jdbcType=VARCHAR},
      trigger_group = #{triggerGroup,jdbcType=VARCHAR},
      pre_job = #{preJob,jdbcType=INTEGER},
      is_effect = #{isEffect,jdbcType=CHAR},
      state = #{state,jdbcType=CHAR},
      remartk = #{remartk,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      ext = #{ext,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, job_name, bean_name, method_name, params, cron_expression, job_group, 
    trigger_name, trigger_group, pre_job, is_effect, state, remartk, create_time, update_time, 
    ext
    from job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, job_name, bean_name, method_name, params, cron_expression, job_group, 
    trigger_name, trigger_group, pre_job, is_effect, state, remartk, create_time, update_time, 
    ext
    from job
  </select>
</mapper>