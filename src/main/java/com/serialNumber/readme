前提知识；
    1.并发-多个用户/线程访问同一个公共数据/数据库/成员，并且修改它 导致不安全  --> 并发代码思考
    2.线程
            1.多个客户访问服务器，对代码controller 成员 以及 其他代码中的公共  -- 每个用户一个独立线程吗？servlet是线程安全的吗 ？
            2.宏观下 - 比如数据库、服务器、业务级判断 处理同一个数据 -->到底哪些代码是共享的？
    mvc-controller中
        @Autowired
        private UserService userService ; 因为该成员变量是不变化的，单例。就像工具类一样
    struts中的
        struts2 是类级别的，多例的。所以可以写 list xx / string intId ...

        1.Servlet是线程安全的吗？ https://www.cnblogs.com/chanshuyi/p/5052426.html
        2.struts2 每次请求都来实例化一次action,会不会造成内存溢出  https://www.javatt.com/p/37967
        3.springMVC 谨慎使用成员变量 https://blog.csdn.net/panda_In5/article/details/78528762
        4.springmvc controller中注入service后为什么是线程安全的？ https://segmentfault.com/q/1010000014971659

        答：你没搞清楚线程安全是什么意思。userService本身并不是线程安全的，你在userController里修改userService吗？
           只是调用userService里的方法吧？方法都是线程安全的，多线程调用一个实例的方法，会在内存中复制变量，
           所以只要你不在userConstroller里修改userService这个实例就没问题。-- 我去new xxservice() /..init /.属性

            手动初始化，不使用spring 就会造成线程安全问题吧

    3.一个客户 代码中使用多线程 手动Thread  <--- 会发生线程安全(多个用户访问/new Thread)问题，什么场景下使用多线程，
        解决方案:
            无锁编程  局部变量话 / threadLocal
            锁

1.全局唯一生成规则  服务器重启继续排、读库性能？多台服务器公用 redis?  大数据并发环境下呢？

    1.流水号(或各种系统序列号)生成问题？https://www.zhihu.com/question/35674057
        如果只要求不重复的话，就使用uuid的方式, 时间+机器+应用ID 。
        就不存在并发问题，而且可以在‘ 客户端直接生产 ’。
        如果需要特殊规则，比如+1递增（并发-多个用户/线程访问同一个公共数据/数据库/成员 导致不安全）。
        就需要一个‘ 独立的应用服务 ’在来生成。可以有这些方式：
             1.利用数据库，自增字段。oracle ,mysql 都有。前端使用web应用封装一下。
             2.自己写代码也简单。java atom 变量可以用。不过要考虑持久化和备份问题。
             3.zookeeper node ID,不过效率比较低

    2.https://juejin.im/entry/5aa214e551882555872321d9：通过时间戳+机器码+随机数
      SimpleDateFormat线程不安全及解决办法：https://blog.csdn.net/csdn_ds/article/details/72984646

    3.支持高并发，可配置，效率高的流水号生成器：https://blog.csdn.net/huangwenyi1010/article/details/51476515

--综合结论实现
    1.redis实现自增部分 https://xli1224.github.io/2018/03/10/global-id-generation/


