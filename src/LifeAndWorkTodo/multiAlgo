multiAlgo
    1.需求回顾
    2.自己分析回顾
    3.代码编写坑点
    4.别人优化点 自己为什么没有想到
    5.
    
    
    1.自己的问题
        1.对于复杂的流程，没有话流程图。导致后期类之间跳转混乱
        2.对已有的流程分支不明确，只是大概的了解。导致考虑不完整  --> 花时间深入细节
        3.对出参入参不明确，导致是否get(0),输出结构没有具体的记录。新增需求是否影响了这个，没有做到前后对比
        4.没有想到是否抽取到类，而是在方法上处理
        5.对需求整体，项目整体认识不全，导致代码设计上不合理，或者过度设计，或者没有加缓存....
        6.强行使用上下文，虽然这里使用了   最后修改为map传递映射，弱引用，并且作为第三工具类处理，不想netty中作为参数进行传递
        7.对已有流程细节不清晰
        8.koutu和tusou区分开，不要用上下文进行关联，输出各自能力，隔离两个模块。统一两模块当前能力和新增.....
    
    2.解决的问题
         1.循环中异常的处理 continue?记数? 抛错误 中断
         2.
        
        
    3.学到了哪些
         1.上下文使用场景，如何设计上下文呢，多线程中传递 ...get...
                1.threadlocal.getall获取所有的map信息也就是context信息在当前线程  --- 在子线程中threadpoll.submit....threadlocal.putall上面的即可将该值传递
                2.MDC.getTraceId() 通过slf4j的MDCs上下文来传递traceid
                3.
         2.测试中，一定要明确入参，对应的sql--debug打印出来，当不符合预期时候，一步一步追踪为什么，是哪个参数还是sql问题 *** 
