------------------------------宗旨-------------------
 *      表设计和对象设计一定程度上是一致的。只是对表/对象 自身特性。但是二者也不是完全映射体现，比如对象间的组合，嵌套，
 *      表之间的外键就是对象的引用。。。有些逻辑表级不体现，直接从service对这些进行控制处理
 *
   1.表设计相关书籍
 * 2.表的根本来自 ‘业务理解’+ 表设计技巧


 1.表设计
           1>设计表结构：RuleDo.java + statusDo.class（状态机表 - 未考虑字段、继承、业务等 -- 需要重新结合看的书写）  数据库常用函数
                如何编写高效sql: 函数..(好的表设计肯定是设计时就考虑了查询，所以可能有冗余)
                利用数据库主键冲突做唯一控制 分布式下
               C:\Users\73699\Desktop\think\极客时间\06-MySQL实战45讲
               C:\Users\73699\Desktop\think\表设计思考\反模式
               C:\Users\73699\Desktop\think\表设计思考\深入浅出MySQL数据库开发优化与管理维护

            2>.sql(转化思路重写sql?)
               RuleDoMapper.interface
               C:\Users\73699\Desktop\think\极客时间\44-SQL必知必会

  业务字段 - 表设计宗旨 - 未来预测 - 性能难度 - 模型 .... --> 表

  反模式+mysql..表架构  ---> 下面的具体实现 ---> 分库分表分布式环境下