无论是哪个设计，架构、数据库、类..都是在对  ‘ 业务特别了解，对未来发展方向预测；并合理抽象   ’

-1:编码命名归范 缩写：https://www.iteye.com/blog/lihaiming-2317036

1.架构设计  https://blog.csdn.net/hguisu/article/details/78258430

1.如何编写工具类：JaxbUtil.class

2.设计表结构：RuleDo.class + statusDo.class（状态机表 - 未考虑字段、继承、业务等 -- 需要重新结合看的书写）
        如何编写高效sql: 函数..(好的表设计肯定是设计时就考虑了查询，所以可能有冗余)
        利用数据库主键冲突做唯一控制 分布式下

3.类
 玩具版 - 规范性 健壮性(异常分支、日志) 风险(安全) 可扩展(设计模式..)
                    - 框架(注解标识、切面、自定义规则配置文件) - 平台（尽可能自动化，参数之间某种关系、各种异常处理）

        重构

